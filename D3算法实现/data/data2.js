const relation = {
    nodes: [
        { id: "flare", size: 1 },
        { id: "analytics", size: 1 },
        { id: "cluster", size: 1 },
        { id: "AgglomerativeCluster", size: 3938 },
        { id: "CommunityStructure", size: 3812 },
        { id: "HierarchicalCluster", size: 6714 },
        { id: "MergeEdge", size: 743 },
        { id: "graph", size: 1 },
        { id: "BetweennessCentrality", size: 3534 },
        { id: "LinkDistance", size: 5731 },
        { id: "MaxFlowMinCut", size: 7840 },
        { id: "ShortestPaths", size: 5914 },
        { id: "SpanningTree", size: 3416 },
        { id: "optimization", size: 1 },
        { id: "AspectRatioBanker", size: 7074 },
        { id: "animate", size: 1 },
        { id: "Easing", size: 17010 },
        { id: "FunctionSequence", size: 5842 },
        { id: "interpolate", size: 1 },
        { id: "ArrayInterpolator", size: 1983 },
        { id: "ColorInterpolator", size: 2047 },
        { id: "DateInterpolator", size: 1375 },
        { id: "Interpolator", size: 8746 },
        { id: "MatrixInterpolator", size: 2202 },
        { id: "NumberInterpolator", size: 1382 },
        { id: "ObjectInterpolator", size: 1629 },
        { id: "PointInterpolator", size: 1675 },
        { id: "RectangleInterpolator", size: 2042 },
        { id: "ISchedulable", size: 1041 },
        { id: "Parallel", size: 5176 },
        { id: "Pause", size: 449 },
        { id: "Scheduler", size: 5593 },
        { id: "Sequence", size: 5534 },
        { id: "Transition", size: 9201 },
        { id: "Transitioner", size: 19975 },
        { id: "TransitionEvent", size: 1116 },
        { id: "Tween", size: 6006 },
        { id: "data", size: 1 },
        { id: "converters", size: 1 },
        { id: "Converters", size: 721 },
        { id: "DelimitedTextConverter", size: 4294 },
        { id: "GraphMLConverter", size: 9800 },
        { id: "IDataConverter", size: 1314 },
        { id: "JSONConverter", size: 2220 },
        { id: "DataField", size: 1759 },
        { id: "DataSchema", size: 2165 },
        { id: "DataSet", size: 586 },
        { id: "DataSource", size: 3331 },
        { id: "DataTable", size: 772 },
        { id: "DataUtil", size: 3322 },
        { id: "display", size: 1 },
        { id: "DirtySprite", size: 8833 },
        { id: "LineSprite", size: 1732 },
        { id: "RectSprite", size: 3623 },
        { id: "TextSprite", size: 10066 },
        { id: "flex", size: 1 },
        { id: "FlareVis", size: 4116 },
        { id: "physics", size: 1 },
        { id: "DragForce", size: 1082 },
        { id: "GravityForce", size: 1336 },
        { id: "IForce", size: 319 },
        { id: "NBodyForce", size: 10498 },
        { id: "Particle", size: 2822 },
        { id: "Simulation", size: 9983 },
        { id: "Spring", size: 2213 },
        { id: "SpringForce", size: 1681 },
        { id: "query", size: 1 },
        { id: "AggregateExpression", size: 1616 },
        { id: "And", size: 1027 },
        { id: "Arithmetic", size: 3891 },
        { id: "Average", size: 891 },
        { id: "BinaryExpression", size: 2893 },
        { id: "Comparison", size: 5103 },
        { id: "CompositeExpression", size: 3677 },
        { id: "Count", size: 781 },
        { id: "DateUtil", size: 4141 },
        { id: "Distinct", size: 933 },
        { id: "Expression", size: 5130 },
        { id: "ExpressionIterator", size: 3617 },
        { id: "Fn", size: 3240 },
        { id: "If", size: 2732 },
        { id: "IsA", size: 2039 },
        { id: "Literal", size: 1214 },
        { id: "Match", size: 3748 },
        { id: "Maximum", size: 843 },
        { id: "methods", size: 1 },
        { id: "add", size: 593 },
        { id: "and", size: 330 },
        { id: "average", size: 287 },
        { id: "count", size: 277 },
        { id: "distinct", size: 292 },
        { id: "div", size: 595 },
        { id: "eq", size: 594 },
        { id: "fn", size: 460 },
        { id: "gt", size: 603 },
        { id: "gte", size: 625 },
        { id: "iff", size: 748 },
        { id: "isa", size: 461 },
        { id: "lt", size: 597 },
        { id: "lte", size: 619 },
        { id: "max", size: 283 },
        { id: "min", size: 283 },
        { id: "mod", size: 591 },
        { id: "mul", size: 603 },
        { id: "neq", size: 599 },
        { id: "not", size: 386 },
        { id: "or", size: 323 },
        { id: "orderby", size: 307 },
        { id: "range", size: 772 },
        { id: "select", size: 296 },
        { id: "stddev", size: 363 },
        { id: "sub", size: 600 },
        { id: "sum", size: 280 },
        { id: "update", size: 307 },
        { id: "variance", size: 335 },
        { id: "where", size: 299 },
        { id: "xor", size: 354 },
        { id: "_", size: 264 },
        { id: "Minimum", size: 843 },
        { id: "Not", size: 1554 },
        { id: "Or", size: 970 },
        { id: "Query", size: 13896 },
        { id: "Range", size: 1594 },
        { id: "StringUtil", size: 4130 },
        { id: "Sum", size: 791 },
        { id: "Variable", size: 1124 },
        { id: "Variance", size: 1876 },
        { id: "Xor", size: 1101 },
        { id: "scale", size: 1 },
        { id: "IScaleMap", size: 2105 },
        { id: "LinearScale", size: 1316 },
        { id: "LogScale", size: 3151 },
        { id: "OrdinalScale", size: 3770 },
        { id: "QuantileScale", size: 2435 },
        { id: "QuantitativeScale", size: 4839 },
        { id: "RootScale", size: 1756 },
        { id: "Scale", size: 4268 },
        { id: "ScaleType", size: 1821 },
        { id: "TimeScale", size: 5833 },
        { id: "util", size: 1 },
        { id: "Arrays", size: 8258 },
        { id: "Colors", size: 10001 },
        { id: "Dates", size: 8217 },
        { id: "Displays", size: 12555 },
        { id: "Filter", size: 2324 },
        { id: "Geometry", size: 10993 },
        { id: "heap", size: 1 },
        { id: "FibonacciHeap", size: 9354 },
        { id: "HeapNode", size: 1233 },
        { id: "IEvaluable", size: 335 },
        { id: "IPredicate", size: 383 },
        { id: "IValueProxy", size: 874 },
        { id: "math", size: 1 },
        { id: "DenseMatrix", size: 3165 },
        { id: "IMatrix", size: 2815 },
        { id: "SparseMatrix", size: 3366 },
        { id: "Maths", size: 17705 },
        { id: "Orientation", size: 1486 },
        { id: "palette", size: 1 },
        { id: "ColorPalette", size: 6367 },
        { id: "Palette", size: 1229 },
        { id: "ShapePalette", size: 2059 },
        { id: "SizePalette", size: 2291 },
        { id: "Property", size: 5559 },
        { id: "Shapes", size: 19118 },
        { id: "Sort", size: 6887 },
        { id: "Stats", size: 6557 },
        { id: "Strings", size: 22026 },
        { id: "vis", size: 1 },
        { id: "axis", size: 1 },
        { id: "Axes", size: 1302 },
        { id: "Axis", size: 24593 },
        { id: "AxisGridLine", size: 652 },
        { id: "AxisLabel", size: 636 },
        { id: "CartesianAxes", size: 6703 },
        { id: "controls", size: 1 },
        { id: "AnchorControl", size: 2138 },
        { id: "ClickControl", size: 3824 },
        { id: "Control", size: 1353 },
        { id: "ControlList", size: 4665 },
        { id: "DragControl", size: 2649 },
        { id: "ExpandControl", size: 2832 },
        { id: "HoverControl", size: 4896 },
        { id: "IControl", size: 763 },
        { id: "PanZoomControl", size: 5222 },
        { id: "SelectionControl", size: 7862 },
        { id: "TooltipControl", size: 8435 },
        { id: "data", size: 1 },
        { id: "Data", size: 20544 },
        { id: "DataList", size: 19788 },
        { id: "DataSprite", size: 10349 },
        { id: "EdgeSprite", size: 3301 },
        { id: "NodeSprite", size: 19382 },
        { id: "render", size: 1 },
        { id: "ArrowType", size: 698 },
        { id: "EdgeRenderer", size: 5569 },
        { id: "IRenderer", size: 353 },
        { id: "ShapeRenderer", size: 2247 },
        { id: "ScaleBinding", size: 11275 },
        { id: "Tree", size: 7147 },
        { id: "TreeBuilder", size: 9930 },
        { id: "events", size: 1 },
        { id: "DataEvent", size: 2313 },
        { id: "SelectionEvent", size: 1880 },
        { id: "TooltipEvent", size: 1701 },
        { id: "VisualizationEvent", size: 1117 },
        { id: "legend", size: 1 },
        { id: "Legend", size: 20859 },
        { id: "LegendItem", size: 4614 },
        { id: "LegendRange", size: 10530 },
        { id: "operator", size: 1 },
        { id: "distortion", size: 1 },
        { id: "BifocalDistortion", size: 4461 },
        { id: "Distortion", size: 6314 },
        { id: "FisheyeDistortion", size: 3444 },
        { id: "encoder", size: 1 },
        { id: "ColorEncoder", size: 3179 },
        { id: "Encoder", size: 4060 },
        { id: "PropertyEncoder", size: 4138 },
        { id: "ShapeEncoder", size: 1690 },
        { id: "SizeEncoder", size: 1830 },
        { id: "filter", size: 1 },
        { id: "FisheyeTreeFilter", size: 5219 },
        { id: "GraphDistanceFilter", size: 3165 },
        { id: "VisibilityFilter", size: 3509 },
        { id: "IOperator", size: 1286 },
        { id: "label", size: 1 },
        { id: "Labeler", size: 9956 },
        { id: "RadialLabeler", size: 3899 },
        { id: "StackedAreaLabeler", size: 3202 },
        { id: "layout", size: 1 },
        { id: "AxisLayout", size: 6725 },
        { id: "BundledEdgeRouter", size: 3727 },
        { id: "CircleLayout", size: 9317 },
        { id: "CirclePackingLayout", size: 12003 },
        { id: "DendrogramLayout", size: 4853 },
        { id: "ForceDirectedLayout", size: 8411 },
        { id: "IcicleTreeLayout", size: 4864 },
        { id: "IndentedTreeLayout", size: 3174 },
        { id: "Layout", size: 7881 },
        { id: "NodeLinkTreeLayout", size: 12870 },
        { id: "PieLayout", size: 2728 },
        { id: "RadialTreeLayout", size: 12348 },
        { id: "RandomLayout", size: 870 },
        { id: "StackedAreaLayout", size: 9121 },
        { id: "TreeMapLayout", size: 9191 },
        { id: "Operator", size: 2490 },
        { id: "OperatorList", size: 5248 },
        { id: "OperatorSequence", size: 4190 },
        { id: "OperatorSwitch", size: 2581 },
        { id: "SortOperator", size: 2023 },
        { id: "Visualization", size: 16540 }
    ],

    links: [
        { source: "flare", target: "analytics" },
        { source: "analytics", target: "cluster" },
        { source: "cluster", target: "AgglomerativeCluster" },
        { source: "cluster", target: "CommunityStructure" },
        { source: "cluster", target: "HierarchicalCluster" },
        { source: "cluster", target: "MergeEdge" },
        { source: "analytics", target: "graph" },
        { source: "graph", target: "BetweennessCentrality" },
        { source: "graph", target: "LinkDistance" },
        { source: "graph", target: "MaxFlowMinCut" },
        { source: "graph", target: "ShortestPaths" },
        { source: "graph", target: "SpanningTree" },
        { source: "analytics", target: "optimization" },
        { source: "optimization", target: "AspectRatioBanker" },
        { source: "flare", target: "animate" },
        { source: "animate", target: "Easing" },
        { source: "animate", target: "FunctionSequence" },
        { source: "animate", target: "interpolate" },
        { source: "interpolate", target: "ArrayInterpolator" },
        { source: "interpolate", target: "ColorInterpolator" },
        { source: "interpolate", target: "DateInterpolator" },
        { source: "interpolate", target: "Interpolator" },
        { source: "interpolate", target: "MatrixInterpolator" },
        { source: "interpolate", target: "NumberInterpolator" },
        { source: "interpolate", target: "ObjectInterpolator" },
        { source: "interpolate", target: "PointInterpolator" },
        { source: "interpolate", target: "RectangleInterpolator" },
        { source: "animate", target: "ISchedulable" },
        { source: "animate", target: "Parallel" },
        { source: "animate", target: "Pause" },
        { source: "animate", target: "Scheduler" },
        { source: "animate", target: "Sequence" },
        { source: "animate", target: "Transition" },
        { source: "animate", target: "Transitioner" },
        { source: "animate", target: "TransitionEvent" },
        { source: "animate", target: "Tween" },
        { source: "flare", target: "data" },
        { source: "data", target: "converters" },
        { source: "converters", target: "Converters" },
        { source: "converters", target: "DelimitedTextConverter" },
        { source: "converters", target: "GraphMLConverter" },
        { source: "converters", target: "IDataConverter" },
        { source: "converters", target: "JSONConverter" },
        { source: "data", target: "DataField" },
        { source: "data", target: "DataSchema" },
        { source: "data", target: "DataSet" },
        { source: "data", target: "DataSource" },
        { source: "data", target: "DataTable" },
        { source: "data", target: "DataUtil" },
        { source: "flare", target: "display" },
        { source: "display", target: "DirtySprite" },
        { source: "display", target: "LineSprite" },
        { source: "display", target: "RectSprite" },
        { source: "display", target: "TextSprite" },
        { source: "flare", target: "flex" },
        { source: "flex", target: "FlareVis" },
        { source: "flare", target: "physics" },
        { source: "physics", target: "DragForce" },
        { source: "physics", target: "GravityForce" },
        { source: "physics", target: "IForce" },
        { source: "physics", target: "NBodyForce" },
        { source: "physics", target: "Particle" },
        { source: "physics", target: "Simulation" },
        { source: "physics", target: "Spring" },
        { source: "physics", target: "SpringForce" },
        { source: "flare", target: "query" },
        { source: "query", target: "AggregateExpression" },
        { source: "query", target: "And" },
        { source: "query", target: "Arithmetic" },
        { source: "query", target: "Average" },
        { source: "query", target: "BinaryExpression" },
        { source: "query", target: "Comparison" },
        { source: "query", target: "CompositeExpression" },
        { source: "query", target: "Count" },
        { source: "query", target: "DateUtil" },
        { source: "query", target: "Distinct" },
        { source: "query", target: "Expression" },
        { source: "query", target: "ExpressionIterator" },
        { source: "query", target: "Fn" },
        { source: "query", target: "If" },
        { source: "query", target: "IsA" },
        { source: "query", target: "Literal" },
        { source: "query", target: "Match" },
        { source: "query", target: "Maximum" },
        { source: "query", target: "methods" },
        { source: "methods", target: "add" },
        { source: "methods", target: "and" },
        { source: "methods", target: "average" },
        { source: "methods", target: "count" },
        { source: "methods", target: "distinct" },
        { source: "methods", target: "div" },
        { source: "methods", target: "eq" },
        { source: "methods", target: "fn" },
        { source: "methods", target: "gt" },
        { source: "methods", target: "gte" },
        { source: "methods", target: "iff" },
        { source: "methods", target: "isa" },
        { source: "methods", target: "lt" },
        { source: "methods", target: "lte" },
        { source: "methods", target: "max" },
        { source: "methods", target: "min" },
        { source: "methods", target: "mod" },
        { source: "methods", target: "mul" },
        { source: "methods", target: "neq" },
        { source: "methods", target: "not" },
        { source: "methods", target: "or" },
        { source: "methods", target: "orderby" },
        { source: "methods", target: "range" },
        { source: "methods", target: "select" },
        { source: "methods", target: "stddev" },
        { source: "methods", target: "sub" },
        { source: "methods", target: "sum" },
        { source: "methods", target: "update" },
        { source: "methods", target: "variance" },
        { source: "methods", target: "where" },
        { source: "methods", target: "xor" },
        { source: "methods", target: "_" },
        { source: "query", target: "Minimum" },
        { source: "query", target: "Not" },
        { source: "query", target: "Or" },
        { source: "query", target: "Query" },
        { source: "query", target: "Range" },
        { source: "query", target: "StringUtil" },
        { source: "query", target: "Sum" },
        { source: "query", target: "Variable" },
        { source: "query", target: "Variance" },
        { source: "query", target: "Xor" },
        { source: "flare", target: "scale" },
        { source: "scale", target: "IScaleMap" },
        { source: "scale", target: "LinearScale" },
        { source: "scale", target: "LogScale" },
        { source: "scale", target: "OrdinalScale" },
        { source: "scale", target: "QuantileScale" },
        { source: "scale", target: "QuantitativeScale" },
        { source: "scale", target: "RootScale" },
        { source: "scale", target: "Scale" },
        { source: "scale", target: "ScaleType" },
        { source: "scale", target: "TimeScale" },
        { source: "flare", target: "util" },
        { source: "util", target: "Arrays" },
        { source: "util", target: "Colors" },
        { source: "util", target: "Dates" },
        { source: "util", target: "Displays" },
        { source: "util", target: "Filter" },
        { source: "util", target: "Geometry" },
        { source: "util", target: "heap" },
        { source: "heap", target: "FibonacciHeap" },
        { source: "heap", target: "HeapNode" },
        { source: "util", target: "IEvaluable" },
        { source: "util", target: "IPredicate" },
        { source: "util", target: "IValueProxy" },
        { source: "util", target: "math" },
        { source: "math", target: "DenseMatrix" },
        { source: "math", target: "IMatrix" },
        { source: "math", target: "SparseMatrix" },
        { source: "util", target: "Maths" },
        { source: "util", target: "Orientation" },
        { source: "util", target: "palette" },
        { source: "palette", target: "ColorPalette" },
        { source: "palette", target: "Palette" },
        { source: "palette", target: "ShapePalette" },
        { source: "palette", target: "SizePalette" },
        { source: "util", target: "Property" },
        { source: "util", target: "Shapes" },
        { source: "util", target: "Sort" },
        { source: "util", target: "Stats" },
        { source: "util", target: "Strings" },
        { source: "flare", target: "vis" },
        { source: "vis", target: "axis" },
        { source: "axis", target: "Axes" },
        { source: "axis", target: "Axis" },
        { source: "axis", target: "AxisGridLine" },
        { source: "axis", target: "AxisLabel" },
        { source: "axis", target: "CartesianAxes" },
        { source: "vis", target: "controls" },
        { source: "controls", target: "AnchorControl" },
        { source: "controls", target: "ClickControl" },
        { source: "controls", target: "Control" },
        { source: "controls", target: "ControlList" },
        { source: "controls", target: "DragControl" },
        { source: "controls", target: "ExpandControl" },
        { source: "controls", target: "HoverControl" },
        { source: "controls", target: "IControl" },
        { source: "controls", target: "PanZoomControl" },
        { source: "controls", target: "SelectionControl" },
        { source: "controls", target: "TooltipControl" },
        { source: "vis", target: "data" },
        { source: "data", target: "Data" },
        { source: "data", target: "DataList" },
        { source: "data", target: "DataSprite" },
        { source: "data", target: "EdgeSprite" },
        { source: "data", target: "NodeSprite" },
        { source: "data", target: "render" },
        { source: "render", target: "ArrowType" },
        { source: "render", target: "EdgeRenderer" },
        { source: "render", target: "IRenderer" },
        { source: "render", target: "ShapeRenderer" },
        { source: "data", target: "ScaleBinding" },
        { source: "data", target: "Tree" },
        { source: "data", target: "TreeBuilder" },
        { source: "vis", target: "events" },
        { source: "events", target: "DataEvent" },
        { source: "events", target: "SelectionEvent" },
        { source: "events", target: "TooltipEvent" },
        { source: "events", target: "VisualizationEvent" },
        { source: "vis", target: "legend" },
        { source: "legend", target: "Legend" },
        { source: "legend", target: "LegendItem" },
        { source: "legend", target: "LegendRange" },
        { source: "vis", target: "operator" },
        { source: "operator", target: "distortion" },
        { source: "distortion", target: "BifocalDistortion" },
        { source: "distortion", target: "Distortion" },
        { source: "distortion", target: "FisheyeDistortion" },
        { source: "operator", target: "encoder" },
        { source: "encoder", target: "ColorEncoder" },
        { source: "encoder", target: "Encoder" },
        { source: "encoder", target: "PropertyEncoder" },
        { source: "encoder", target: "ShapeEncoder" },
        { source: "encoder", target: "SizeEncoder" },
        { source: "operator", target: "filter" },
        { source: "filter", target: "FisheyeTreeFilter" },
        { source: "filter", target: "GraphDistanceFilter" },
        { source: "filter", target: "VisibilityFilter" },
        { source: "operator", target: "IOperator" },
        { source: "operator", target: "label" },
        { source: "label", target: "Labeler" },
        { source: "label", target: "RadialLabeler" },
        { source: "label", target: "StackedAreaLabeler" },
        { source: "operator", target: "layout" },
        { source: "layout", target: "AxisLayout" },
        { source: "layout", target: "BundledEdgeRouter" },
        { source: "layout", target: "CircleLayout" },
        { source: "layout", target: "CirclePackingLayout" },
        { source: "layout", target: "DendrogramLayout" },
        { source: "layout", target: "ForceDirectedLayout" },
        { source: "layout", target: "IcicleTreeLayout" },
        { source: "layout", target: "IndentedTreeLayout" },
        { source: "layout", target: "Layout" },
        { source: "layout", target: "NodeLinkTreeLayout" },
        { source: "layout", target: "PieLayout" },
        { source: "layout", target: "RadialTreeLayout" },
        { source: "layout", target: "RandomLayout" },
        { source: "layout", target: "StackedAreaLayout" },
        { source: "layout", target: "TreeMapLayout" },
        { source: "operator", target: "Operator" },
        { source: "operator", target: "OperatorList" },
        { source: "operator", target: "OperatorSequence" },
        { source: "operator", target: "OperatorSwitch" },
        { source: "operator", target: "SortOperator" },
        { source: "vis", target: "Visualization" }
    ]
};
